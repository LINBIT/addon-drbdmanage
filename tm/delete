#!/bin/bash
#
#==========================================================================
# Copyright 2016 LINBIT USA LCC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#==========================================================================

DST=$1
VM_ID=$2
DS_ID=$3

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON="${ONE_LOCATION}"/var/remotes/tm/tm_common.sh
fi

source "$TMCOMMON"

DRIVER_PATH=$(dirname "$0")
source "${DRIVER_PATH}"/../../datastore/drbdmanage/drbdmanage.conf
source "${DRIVER_PATH}"/../../datastore/drbdmanage/drbd_common.sh
XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"
source "${DRIVER_PATH}"/eXtract.sh

DST=`fix_dir_slashes $DST`

drbd_log "Beginning delete action."
drbd_log "Called with DST: ${DST}"

# Get virtualization host information
DST_PATH=$(arg_path "$DST")
DST_HOST=$(arg_host "$DST")
DST_DIR=$(dirname "$DST_PATH")
DISK_ID=$(eXtract_disk_id_from_path "$DST_PATH")

DS_TYPE=$(eXtract_datastore_param "$DS_ID" "TYPE")

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
      XPATH_ELEMENTS[i++]="$element"
    done < <(onevm show -x "$VM_ID" | $XPATH \
                        /VM/TEMPLATE/CONTEXT/DISK_ID)

    CONTEXT_DISK_ID="${XPATH_ELEMENTS[j++]}"

 DRBD_RES_NAME=$(eXtract_disk_param "$VM_ID" "$DISK_ID" "SOURCE" | xargs)
 PERSISTENT=$(eXtract_disk_param "$VM_ID" "$DISK_ID" "PERSISTENT")

if [ "$DS_TYPE" = "1" ] && [ -z "$DRBD_RES_NAME" ] ; then
    DRBD_RES_NAME="OpenNebula-vm-context"
    DISK_ID=${CONTEXT_DISK_ID}
fi

# Get information for live migration
DRBD_SUPPORT_LIVE_MIGRATION=$(eXtract_datastore_param "$DS_ID" "DRBD_SUPPORT_LIVE_MIGRATION")

# Link DRBD device to datastore location.
UNLINK_COMMAND=$(cat <<EOF
    set -e

    if [ -d "${DST_PATH}" ]; then
        rm -rf "${DST_PATH}"
    else
        rm -f ${DST_PATH}
    fi

EOF
)

ssh_exec_and_log "$DST_HOST" "$UNLINK_COMMAND" \
          "Error: Unable to remove symbolic link $DST_PATH on $DST_HOST"

# If the images is not persistent, remove it.
if [ -z "$PERSISTENT" ]; then
  drbd_remove_res "${DRBD_RES_NAME}-vm${VM_ID}-disk${DISK_ID}"

  drbd_log "Ending non-persistent delete action."

  exit 0
fi

# Don't unassign images if live migration is enabled.
if [ "$DRBD_SUPPORT_LIVE_MIGRATION" != "yes" ]; then
  drbd_unassign_res "$DRBD_RES_NAME" "$DST_HOST"

  drbd_log "Ending persistent delete action."

  exit 0
fi

exit 0
